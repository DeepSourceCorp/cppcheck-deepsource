use serde::{Deserialize, Serialize};

#[derive(Serialize, Deserialize, Debug)]
pub struct Location {
    #[serde(rename = "@file")]
    pub file: String,
    #[serde(rename = "@line")]
    pub line: u32,
    #[serde(rename = "@column")]
    pub column: u32,
}

#[derive(Serialize, Deserialize, Debug)]
pub struct Error {
    #[serde(rename = "@id")]
    pub id: String,
    #[serde(rename = "@severity")]
    pub severity: String,
    #[serde(rename = "@msg")]
    pub msg: String,
    #[serde(rename = "@verbose")]
    pub verbose: String,
    #[serde(rename = "@file0")]
    pub file0: Option<String>,
    #[serde(rename = "@cwe")]
    pub cwe: Option<String>,
    pub location: Option<Vec<Location>>,
    pub symbol: Option<String>,
}

#[derive(Serialize, Deserialize, Debug)]
pub struct Errors {
    #[serde(default)]
    pub error: Vec<Error>,
}

#[derive(Serialize, Deserialize, Debug)]
pub struct Results {
    pub errors: Errors,
}

#[test]
fn t_xml() {
    let src = r##"
    <?xml version="1.0" encoding="UTF-8"?>
    <results version="2">
        <cppcheck version="2.10.3"/>
        <errors>
            <error id="missingReturn" severity="error" msg="Found an exit path from function with non-void return type that has missing return statement" verbose="Found an exit path from function with non-void return type that has missing return statement" cwe="758" file0="test/checks/a1002.c">
                <location file="test/checks/a1002.c" line="4" column="5"/>
            </error>
            <error id="misra-c2012-2.3" severity="style" msg="misra violation (use --rule-texts=&lt;file&gt; to get proper output)" verbose="misra violation (use --rule-texts=&lt;file&gt; to get proper output)">
                <location file="test/checks/use-using.cpp" line="196" column="45"/>
            </error>
            <error id="misra-c2012-2.3" severity="style" msg="misra violation (use --rule-texts=&lt;file&gt; to get proper output)" verbose="misra violation (use --rule-texts=&lt;file&gt; to get proper output)">
                <location file="test/checks/use-using.cpp" line="198" column="90"/>
            </error>
            <error id="misra-c2012-2.3" severity="style" msg="misra violation (use --rule-texts=&lt;file&gt; to get proper output)" verbose="misra violation (use --rule-texts=&lt;file&gt; to get proper output)">
                <location file="test/checks/use-using.cpp" line="200" column="111"/>
            </error>
            <error id="misra-c2012-2.5" severity="style" msg="misra violation (use --rule-texts=&lt;file&gt; to get proper output)" verbose="misra violation (use --rule-texts=&lt;file&gt; to get proper output)">
                <location file="test/checks/test_line_len_limit.c" line="1" column="0"/>
            </error>
            <error id="misra-c2012-5.8" severity="style" msg="misra violation (use --rule-texts=&lt;file&gt; to get proper output)" verbose="misra violation (use --rule-texts=&lt;file&gt; to get proper output)">
                <location file="test/checks/flp30-c.c" line="9" column="9"/>
            </error>
            <error id="misra-c2012-5.8" severity="style" msg="misra violation (use --rule-texts=&lt;file&gt; to get proper output)" verbose="misra violation (use --rule-texts=&lt;file&gt; to get proper output)">
                <location file="test/checks/msc32-c.c" line="26" column="7"/>
            </error>
        </errors>
    </results>
    "##;
    let _value: Results = quick_xml::de::from_str(src).unwrap();
}

pub(crate) fn mapping(s: &str) -> Option<String> {
    Some(
        match s {
            // compiler only issue
            "misra-c2012-1.1" => "CXX-W2038",
            "misra-c2012-1.2" => "CXX-W2038",
            // implmented in CppCheck
            "misra-c2012-1.3" => "CXX-W2038",
            "misra-c2012-1.4" => "CXX-W2038",
            "misra-c2012-2.1" => "CXX-W2038",
            "misra-c2012-2.2" => "CXX-W2038",
            "misra-c2012-2.3" => "CXX-W2038",
            "misra-c2012-2.4" => "CXX-W2038",
            "misra-c2012-2.5" => "CXX-W2038",
            "misra-c2012-2.6" => "CXX-W2038",
            "misra-c2012-2.7" => "CXX-W2038",
            "misra-c2012-3.1" => "CXX-W2038",
            "misra-c2012-3.2" => "CXX-W2038",
            "misra-c2012-4.1" => "CXX-W2038",
            "misra-c2012-4.2" => "CXX-W2038",
            "misra-c2012-5.1" => "CXX-W2038",
            "misra-c2012-5.2" => "CXX-W2038",
            "misra-c2012-5.3" => "CXX-W2038",
            "misra-c2012-5.4" => "CXX-W2038",
            "misra-c2012-5.5" => "CXX-W2038",
            "misra-c2012-5.6" => "CXX-W2038",
            "misra-c2012-5.7" => "CXX-W2038",
            "misra-c2012-5.8" => "CXX-W2038",
            "misra-c2012-5.9" => "CXX-W2038",
            "misra-c2012-6.1" => "CXX-W2038",
            "misra-c2012-6.2" => "CXX-W2038",
            "misra-c2012-7.1" => "CXX-W2038",
            "misra-c2012-7.2" => "CXX-W2038",
            "misra-c2012-7.3" => "CXX-W2038",
            "misra-c2012-7.4" => "CXX-W2038",
            "misra-c2012-8.1" => "CXX-W2038",
            "misra-c2012-8.2" => "CXX-W2038",
            "misra-c2012-8.3" => "CXX-W2038",
            "misra-c2012-8.4" => "CXX-W2038",
            "misra-c2012-8.5" => "CXX-W2038",
            "misra-c2012-8.6" => "CXX-W2038",
            "misra-c2012-8.7" => "CXX-W2038",
            "misra-c2012-8.8" => "CXX-W2038",
            "misra-c2012-8.9" => "CXX-W2038",
            "misra-c2012-8.10" => "CXX-W2038",
            "misra-c2012-8.11" => "CXX-W2038",
            "misra-c2012-8.12" => "CXX-W2038",
            "misra-c2012-8.13" => "CXX-W2038",
            "misra-c2012-8.14" => "CXX-W2038",
            "misra-c2012-9.1" => "CXX-W2038",
            "misra-c2012-9.2" => "CXX-W2038",
            "misra-c2012-9.3" => "CXX-W2038",
            "misra-c2012-9.4" => "CXX-W2038",
            "misra-c2012-9.5" => "CXX-W2038",
            "misra-c2012-10.1" => "CXX-W2038",
            "misra-c2012-10.2" => "CXX-W2038",
            "misra-c2012-10.3" => "CXX-W2038",
            "misra-c2012-10.4" => "CXX-W2038",
            "misra-c2012-10.5" => "CXX-W2038",
            "misra-c2012-10.6" => "CXX-W2038",
            "misra-c2012-10.7" => "CXX-W2038",
            "misra-c2012-10.8" => "CXX-W2038",
            "misra-c2012-11.1" => "CXX-W2038",
            "misra-c2012-11.2" => "CXX-W2038",
            "misra-c2012-11.3" => "CXX-W2038",
            "misra-c2012-11.4" => "CXX-W2038",
            "misra-c2012-11.5" => "CXX-W2038",
            "misra-c2012-11.6" => "CXX-W2038",
            "misra-c2012-11.7" => "CXX-W2038",
            "misra-c2012-11.8" => "CXX-W2038",
            "misra-c2012-11.9" => "CXX-W2038",
            "misra-c2012-12.1" => "CXX-W2038",
            "misra-c2012-12.2" => "CXX-W2038",
            "misra-c2012-12.3" => "CXX-W2038",
            "misra-c2012-12.4" => "CXX-W2038",
            "misra-c2012-13.1" => "CXX-W2038",
            "misra-c2012-13.2" => "CXX-W2038",
            "misra-c2012-13.3" => "CXX-W2038",
            "misra-c2012-13.4" => "CXX-W2038",
            "misra-c2012-13.5" => "CXX-W2038",
            "misra-c2012-13.6" => "CXX-W2038",
            "misra-c2012-14.1" => "CXX-W2038",
            "misra-c2012-14.2" => "CXX-W2038",
            "misra-c2012-14.3" => "CXX-W2038",
            "misra-c2012-14.4" => "CXX-W2038",
            "misra-c2012-15.1" => "CXX-W2038",
            "misra-c2012-15.2" => "CXX-W2038",
            "misra-c2012-15.3" => "CXX-W2038",
            "misra-c2012-15.4" => "CXX-W2038",
            "misra-c2012-15.5" => "CXX-W2038",
            "misra-c2012-15.6" => "CXX-W2038",
            "misra-c2012-15.7" => "CXX-W2038",
            "misra-c2012-16.1" => "CXX-W2038",
            "misra-c2012-16.2" => "CXX-W2038",
            "misra-c2012-16.3" => "CXX-W2038",
            "misra-c2012-16.4" => "CXX-W2038",
            "misra-c2012-16.5" => "CXX-W2038",
            "misra-c2012-16.6" => "CXX-W2038",
            "misra-c2012-16.7" => "CXX-W2038",
            "misra-c2012-17.1" => "CXX-W2038",
            "misra-c2012-17.2" => "CXX-W2038",
            // compiler only issue
            "misra-c2012-17.3" => "CXX-W2038",
            // -------------------
            "misra-c2012-17.4" => "CXX-W2038",
            "misra-c2012-17.5" => "CXX-W2038",
            "misra-c2012-17.6" => "CXX-W2038",
            "misra-c2012-17.7" => "CXX-W2038",
            "misra-c2012-17.8" => "CXX-W2038",
            "misra-c2012-18.1" => "CXX-W2038",
            "misra-c2012-18.2" => "CXX-W2038",
            "misra-c2012-18.3" => "CXX-W2038",
            "misra-c2012-18.4" => "CXX-W2038",
            "misra-c2012-18.5" => "CXX-W2038",
            "misra-c2012-18.6" => "CXX-W2038",
            "misra-c2012-18.7" => "CXX-W2038",
            "misra-c2012-18.8" => "CXX-W2038",
            "misra-c2012-19.1" => "CXX-W2038",
            "misra-c2012-19.2" => "CXX-W2038",
            "misra-c2012-20.1" => "CXX-W2038",
            "misra-c2012-20.2" => "CXX-W2038",
            "misra-c2012-20.3" => "CXX-W2038",
            "misra-c2012-20.4" => "CXX-W2038",
            "misra-c2012-20.5" => "CXX-W2038",
            "misra-c2012-20.6" => "CXX-W2038",
            "misra-c2012-20.7" => "CXX-W2038",
            "misra-c2012-20.8" => "CXX-W2038",
            "misra-c2012-20.9" => "CXX-W2038",
            "misra-c2012-20.10" => "CXX-W2038",
            "misra-c2012-20.11" => "CXX-W2038",
            "misra-c2012-20.12" => "CXX-W2038",
            "misra-c2012-20.13" => "CXX-W2038",
            "misra-c2012-20.14" => "CXX-W2038",
            "misra-c2012-21.1" => "CXX-W2038",
            "misra-c2012-21.2" => "CXX-W2038",
            "misra-c2012-21.3" => "CXX-W2038",
            "misra-c2012-21.4" => "CXX-W2038",
            "misra-c2012-21.5" => "CXX-W2038",
            "misra-c2012-21.6" => "CXX-W2038",
            "misra-c2012-21.7" => "CXX-W2038",
            "misra-c2012-21.8" => "CXX-W2038",
            "misra-c2012-21.9" => "CXX-W2038",
            "misra-c2012-21.10" => "CXX-W2038",
            "misra-c2012-21.11" => "CXX-W2038",
            "misra-c2012-21.12" => "CXX-W2038",
            "misra-c2012-21.13" => "CXX-W2038",
            "misra-c2012-21.14" => "CXX-W2038",
            "misra-c2012-21.15" => "CXX-W2038",
            "misra-c2012-21.16" => "CXX-W2038",
            "misra-c2012-21.17" => "CXX-W2038",
            "misra-c2012-21.18" => "CXX-W2038",
            "misra-c2012-21.19" => "CXX-W2038",
            "misra-c2012-21.20" => "CXX-W2038",
            "misra-c2012-21.21" => "CXX-W2038",
            "misra-c2012-22.1" => "CXX-W2038",
            "misra-c2012-22.2" => "CXX-W2038",
            "misra-c2012-22.3" => "CXX-W2038",
            "misra-c2012-22.4" => "CXX-W2038",
            "misra-c2012-22.5" => "CXX-W2038",
            "misra-c2012-22.6" => "CXX-W2038",
            "misra-c2012-22.7" => "CXX-W2038",
            "misra-c2012-22.8" => "CXX-W2038",
            "misra-c2012-22.9" => "CXX-W2038",
            "misra-c2012-22.10" => "CXX-W2038",
            // all other cpp check issues
            "purgedConfiguration" => "CXX-W2039",
            "toomanyconfigs" => "CXX-W2039",
            "AssignmentAddressToInteger" => "CXX-W2039",
            "AssignmentIntegerToAddress" => "CXX-W2039",
            "CastIntegerToAddressAtReturn" => "CXX-W2039",
            "CastAddressToIntegerAtReturn" => "CXX-W2039",
            "assertWithSideEffect" => "CXX-W2039",
            "assignmentInAssert" => "CXX-W2039",
            "autoVariables" => "CXX-W2039",
            "returnReference" => "CXX-W2039",
            "danglingReference" => "CXX-W2039",
            "returnTempReference" => "CXX-W2039",
            "danglingTempReference" => "CXX-W2039",
            "autovarInvalidDeallocation" => "CXX-W2039",
            "uselessAssignmentArg" => "CXX-W2039",
            "uselessAssignmentPtrArg" => "CXX-W2039",
            "returnDanglingLifetime" => "CXX-W2039",
            "invalidLifetime" => "CXX-W2039",
            "danglingLifetime" => "CXX-W2039",
            "danglingTemporaryLifetime" => "CXX-W2039",
            "assignBoolToPointer" => "CXX-W2039",
            "assignBoolToFloat" => "CXX-W2039",
            "comparisonOfFuncReturningBoolError" => "CXX-W2039",
            "comparisonOfTwoFuncsReturningBoolError" => "CXX-W2039",
            "comparisonOfBoolWithBoolError" => "CXX-W2039",
            "incrementboolean" => "CXX-W2039",
            "bitwiseOnBoolean" => "CXX-W2039",
            "compareBoolExpressionWithInt" => "CXX-W2039",
            "pointerArithBool" => "CXX-W2039",
            "comparisonOfBoolWithInvalidComparator" => "CXX-W2039",
            "returnNonBoolInBooleanFunction" => "CXX-W2039",
            "boostForeachError" => "CXX-W2039",
            "arrayIndexOutOfBounds" => "CXX-W2039",
            "arrayIndexOutOfBoundsCond" => "CXX-W2039",
            "pointerOutOfBounds" => "CXX-W2039",
            "negativeIndex" => "CXX-W2039",
            "arrayIndexThenCheck" => "CXX-W2039",
            "bufferAccessOutOfBounds" => "CXX-W2039",
            "objectIndex" => "CXX-W2039",
            "argumentSize" => "CXX-W2039",
            "negativeMemoryAllocationSize" => "CXX-W2039",
            "negativeArraySize" => "CXX-W2039",
            "invalidFunctionArg" => "CXX-W2039",
            "invalidFunctionArgBool" => "CXX-W2039",
            "invalidFunctionArgStr" => "CXX-W2039",
            "ignoredReturnValue" => "CXX-W2039",
            "wrongmathcall" => "CXX-W2039",
            "unpreciseMathCall" => "CXX-W2039",
            "memsetZeroBytes" => "CXX-W2039",
            "memsetFloat" => "CXX-W2039",
            "memsetValueOutOfRange" => "CXX-W2039",
            "missingReturn" => "CXX-W2039",
            "returnStdMoveLocal" => "CXX-W2039",
            "useStandardLibrary" => "CXX-W2039",
            "noConstructor" => "CXX-W2039",
            "noExplicitConstructor" => "CXX-W2039",
            "copyCtorPointerCopying" => "CXX-W2039",
            "noCopyConstructor" => "CXX-W2039",
            "noOperatorEq" => "CXX-W2039",
            "noDestructor" => "CXX-W2039",
            "uninitMemberVar" => "CXX-W2039",
            "uninitMemberVarPrivate" => "CXX-W2039",
            "uninitDerivedMemberVar" => "CXX-W2039",
            "uninitDerivedMemberVarPrivate" => "CXX-W2039",
            "missingMemberCopy" => "CXX-W2039",
            "operatorEqVarError" => "CXX-W2039",
            "unusedPrivateFunction" => "CXX-W2039",
            "memsetClass" => "CXX-W2039",
            "memsetClassReference" => "CXX-W2039",
            "memsetClassFloat" => "CXX-W2039",
            "mallocOnClassWarning" => "CXX-W2039",
            "mallocOnClassError" => "CXX-W2039",
            "virtualDestructor" => "CXX-W2039",
            "thisSubtraction" => "CXX-W2039",
            "operatorEqRetRefThis" => "CXX-W2039",
            "operatorEqMissingReturnStatement" => "CXX-W2039",
            "operatorEqShouldBeLeftUnimplemented" => "CXX-W2039",
            "operatorEqToSelf" => "CXX-W2039",
            "functionConst" => "CXX-W2039",
            "functionStatic" => "CXX-W2039",
            "initializerList" => "CXX-W2039",
            "useInitializationList" => "CXX-W2039",
            "selfInitialization" => "CXX-W2039",
            "duplInheritedMember" => "CXX-W2039",
            "copyCtorAndEqOperator" => "CXX-W2039",
            "pureVirtualCall" => "CXX-W2039",
            "virtualCallInConstructor" => "CXX-W2039",
            "missingOverride" => "CXX-W2039",
            "thisUseAfterFree" => "CXX-W2039",
            "unsafeClassRefMember" => "CXX-W2039",
            "assignIfError" => "CXX-W2039",
            "badBitmaskCheck" => "CXX-W2039",
            "comparisonError" => "CXX-W2039",
            "duplicateCondition" => "CXX-W2039",
            "multiCondition" => "CXX-W2039",
            "mismatchingBitAnd" => "CXX-W2039",
            "oppositeInnerCondition" => "CXX-W2039",
            "identicalInnerCondition" => "CXX-W2039",
            "identicalConditionAfterEarlyExit" => "CXX-W2039",
            "incorrectLogicOperator" => "CXX-W2039",
            "redundantCondition" => "CXX-W2039",
            "moduloAlwaysTrueFalse" => "CXX-W2039",
            "clarifyCondition" => "CXX-W2039",
            "knownConditionTrueFalse" => "CXX-W2039",
            "invalidTestForOverflow" => "CXX-W2039",
            "pointerAdditionResultNotNull" => "CXX-W2039",
            "duplicateConditionalAssign" => "CXX-W2039",
            "assignmentInCondition" => "CXX-W2039",
            "compareValueOutOfTypeRangeError" => "CXX-W2039",
            "exceptThrowInDestructor" => "CXX-W2039",
            "exceptDeallocThrow" => "CXX-W2039",
            "exceptRethrowCopy" => "CXX-W2039",
            "catchExceptionByValue" => "CXX-W2039",
            "throwInNoexceptFunction" => "CXX-W2039",
            "unhandledExceptionSpecification" => "CXX-W2039",
            "rethrowNoCurrentException" => "CXX-W2039",
            "coutCerrMisusage" => "CXX-W2039",
            "fflushOnInputStream" => "CXX-W2039",
            "IOWithoutPositioning" => "CXX-W2039",
            "readWriteOnlyFile" => "CXX-W2039",
            "writeReadOnlyFile" => "CXX-W2039",
            "useClosedFile" => "CXX-W2039",
            "seekOnAppendedFile" => "CXX-W2039",
            "incompatibleFileOpen" => "CXX-W2039",
            "invalidscanf" => "CXX-W2039",
            "wrongPrintfScanfArgNum" => "CXX-W2039",
            "invalidScanfArgType_s" => "CXX-W2039",
            "invalidScanfArgType_int" => "CXX-W2039",
            "invalidScanfArgType_float" => "CXX-W2039",
            "invalidPrintfArgType_s" => "CXX-W2039",
            "invalidPrintfArgType_n" => "CXX-W2039",
            "invalidPrintfArgType_p" => "CXX-W2039",
            "invalidPrintfArgType_uint" => "CXX-W2039",
            "invalidPrintfArgType_sint" => "CXX-W2039",
            "invalidPrintfArgType_float" => "CXX-W2039",
            "invalidLengthModifierError" => "CXX-W2039",
            "invalidScanfFormatWidth" => "CXX-W2039",
            "invalidScanfFormatWidth_smaller" => "CXX-W2039",
            "wrongPrintfScanfParameterPositionError" => "CXX-W2039",
            "deallocret" => "CXX-W2039",
            "doubleFree" => "CXX-W2039",
            "leakNoVarFunctionCall" => "CXX-W2039",
            "leakReturnValNotUsed" => "CXX-W2039",
            "leakUnsafeArgAlloc" => "CXX-W2039",
            "publicAllocationError" => "CXX-W2039",
            "unsafeClassCanLeak" => "CXX-W2039",
            "memleak" => "CXX-W2039",
            "resourceLeak" => "CXX-W2039",
            "deallocuse" => "CXX-W2039",
            "mismatchAllocDealloc" => "CXX-W2039",
            "memleakOnRealloc" => "CXX-W2039",
            "nullPointer" => "CXX-W2039",
            "nullPointerDefaultArg" => "CXX-W2039",
            "nullPointerRedundantCheck" => "CXX-W2039",
            "nullPointerArithmetic" => "CXX-W2039",
            "nullPointerArithmeticRedundantCheck" => "CXX-W2039",
            "zerodiv" => "CXX-W2039",
            "zerodivcond" => "CXX-W2039",
            "unusedScopedObject" => "CXX-W2039",
            "invalidPointerCast" => "CXX-W2039",
            "shiftNegativeLHS" => "CXX-W2039",
            "shiftNegative" => "CXX-W2039",
            "raceAfterInterlockedDecrement" => "CXX-W2039",
            "invalidFree" => "CXX-W2039",
            "overlappingWriteUnion" => "CXX-W2039",
            "overlappingWriteFunction" => "CXX-W2039",
            "redundantCopyLocalConst" => "CXX-W2039",
            "redundantCopy" => "CXX-W2039",
            "comparisonFunctionIsAlwaysTrueOrFalse" => "CXX-W2039",
            "checkCastIntToCharAndBack" => "CXX-W2039",
            "cstyleCast" => "CXX-W2039",
            "passedByValue" => "CXX-W2039",
            "constParameter" => "CXX-W2039",
            "constVariable" => "CXX-W2039",
            "constParameterCallback" => "CXX-W2039",
            "constStatement" => "CXX-W2039",
            "signedCharArrayIndex" => "CXX-W2039",
            "unknownSignCharArrayIndex" => "CXX-W2039",
            "charBitOp" => "CXX-W2039",
            "variableScope" => "CXX-W2039",
            "redundantAssignInSwitch" => "CXX-W2039",
            "suspiciousCase" => "CXX-W2039",
            "selfAssignment" => "CXX-W2039",
            "clarifyCalculation" => "CXX-W2039",
            "clarifyStatement" => "CXX-W2039",
            "duplicateBranch" => "CXX-W2039",
            "duplicateAssignExpression" => "CXX-W2039",
            "oppositeExpression" => "CXX-W2039",
            "duplicateExpression" => "CXX-W2039",
            "duplicateValueTernary" => "CXX-W2039",
            "duplicateExpressionTernary" => "CXX-W2039",
            "duplicateBreak" => "CXX-W2039",
            "unreachableCode" => "CXX-W2039",
            "unsignedLessThanZero" => "CXX-W2039",
            "unsignedPositive" => "CXX-W2039",
            "pointerLessThanZero" => "CXX-W2039",
            "pointerPositive" => "CXX-W2039",
            "suspiciousSemicolon" => "CXX-W2039",
            "incompleteArrayFill" => "CXX-W2039",
            "varFuncNullUB" => "CXX-W2039",
            "nanInArithmeticExpression" => "CXX-W2039",
            "commaSeparatedReturn" => "CXX-W2039",
            "redundantPointerOp" => "CXX-W2039",
            "unusedLabel" => "CXX-W2039",
            "unusedLabelConfiguration" => "CXX-W2039",
            "unusedLabelSwitch" => "CXX-W2039",
            "unusedLabelSwitchConfiguration" => "CXX-W2039",
            "unknownEvaluationOrder" => "CXX-W2039",
            "accessMoved" => "CXX-W2039",
            "accessForwarded" => "CXX-W2039",
            "funcArgNamesDifferent" => "CXX-W2039",
            "redundantBitwiseOperationInSwitch" => "CXX-W2039",
            "shadowVariable" => "CXX-W2039",
            "shadowFunction" => "CXX-W2039",
            "shadowArgument" => "CXX-W2039",
            "knownArgument" => "CXX-W2039",
            "knownArgumentHiddenVariableExpression" => "CXX-W2039",
            "comparePointers" => "CXX-W2039",
            "redundantAssignment" => "CXX-W2039",
            "redundantInitialization" => "CXX-W2039",
            "funcArgOrderDifferent" => "CXX-W2039",
            "moduloofone" => "CXX-W2039",
            "containerOutOfBounds" => "CXX-W2039",
            "invalidIterator1" => "CXX-W2039",
            "iterators1" => "CXX-W2039",
            "iterators2" => "CXX-W2039",
            "iterators3" => "CXX-W2039",
            "invalidContainerLoop" => "CXX-W2039",
            "invalidContainer" => "CXX-W2039",
            "mismatchingContainerIterator" => "CXX-W2039",
            "mismatchingContainers" => "CXX-W2039",
            "mismatchingContainerExpression" => "CXX-W2039",
            "sameIteratorExpression" => "CXX-W2039",
            "eraseDereference" => "CXX-W2039",
            "stlOutOfBounds" => "CXX-W2039",
            "negativeContainerIndex" => "CXX-W2039",
            "stlBoundaries" => "CXX-W2039",
            "stlIfFind" => "CXX-W2039",
            "stlIfStrFind" => "CXX-W2039",
            "stlFindInsert" => "CXX-W2039",
            "stlcstr" => "CXX-W2039",
            "stlcstrReturn" => "CXX-W2039",
            "stlcstrParam" => "CXX-W2039",
            "stlcstrthrow" => "CXX-W2039",
            "stlSize" => "CXX-W2039",
            "StlMissingComparison" => "CXX-W2039",
            "redundantIfRemove" => "CXX-W2039",
            "uselessCallsCompare" => "CXX-W2039",
            "uselessCallsSwap" => "CXX-W2039",
            "uselessCallsSubstr" => "CXX-W2039",
            "uselessCallsEmpty" => "CXX-W2039",
            "uselessCallsRemove" => "CXX-W2039",
            "derefInvalidIterator" => "CXX-W2039",
            "useStlAlgorithm" => "CXX-W2039",
            "knownEmptyContainer" => "CXX-W2039",
            "globalLockGuard" => "CXX-W2039",
            "localMutex" => "CXX-W2039",
            "sizeofwithsilentarraypointer" => "CXX-W2039",
            "pointerSize" => "CXX-W2039",
            "sizeofDivisionMemfunc" => "CXX-W2039",
            "sizeofwithnumericparameter" => "CXX-W2039",
            "sizeofsizeof" => "CXX-W2039",
            "sizeofCalculation" => "CXX-W2039",
            "sizeofFunctionCall" => "CXX-W2039",
            "multiplySizeof" => "CXX-W2039",
            "divideSizeof" => "CXX-W2039",
            "sizeofVoid" => "CXX-W2039",
            "sizeofDereferencedVoidPointer" => "CXX-W2039",
            "arithOperationsOnVoidPointer" => "CXX-W2039",
            "stringLiteralWrite" => "CXX-W2039",
            "sprintfOverlappingData" => "CXX-W2039",
            "strPlusChar" => "CXX-W2039",
            "incorrectStringCompare" => "CXX-W2039",
            "literalWithCharPtrCompare" => "CXX-W2039",
            "charLiteralWithCharPtrCompare" => "CXX-W2039",
            "incorrectStringBooleanError" => "CXX-W2039",
            "incorrectCharBooleanError" => "CXX-W2039",
            "staticStringCompare" => "CXX-W2039",
            "stringCompare" => "CXX-W2039",
            "overlappingStrcmp" => "CXX-W2039",
            "shiftTooManyBits" => "CXX-W2039",
            "shiftTooManyBitsSigned" => "CXX-W2039",
            "integerOverflow" => "CXX-W2039",
            "signConversion" => "CXX-W2039",
            "truncLongCastAssignment" => "CXX-W2039",
            "truncLongCastReturn" => "CXX-W2039",
            "floatConversionOverflow" => "CXX-W2039",
            "uninitdata" => "CXX-W2039",
            "uninitStructMember" => "CXX-W2039",
            "unusedFunction" => "CXX-W2039",
            "unusedVariable" => "CXX-W2039",
            "unusedAllocatedMemory" => "CXX-W2039",
            "unreadVariable" => "CXX-W2039",
            "unassignedVariable" => "CXX-W2039",
            "unusedStructMember" => "CXX-W2039",
            "postfixOperator" => "CXX-W2039",
            "va_start_wrongParameter" => "CXX-W2039",
            "va_start_referencePassed" => "CXX-W2039",
            "va_end_missing" => "CXX-W2039",
            "va_list_usedBeforeStarted" => "CXX-W2039",
            "va_start_subsequentCalls" => "CXX-W2039",
            "missingInclude" => "CXX-W2039",
            "missingIncludeSystem" => "CXX-W2039",
            "ConfigurationNotChecked" => "CXX-W2039",
            "preprocessorErrorDirective" => "CXX-W2039",
            _ => return None,
        }
        .to_string(),
    )
}
